<?php
// Projet TraceGPS
// fichier : modele/DAO.test1.php
// RÃ´le : test de la classe DAO.class.php
// DerniÃ¨re mise Ã  jour : xxxxxxxxxxxxxxxxx par xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

// Le code des tests restant Ã  dÃ©velopper va Ãªtre rÃ©parti entre les membres de l'Ã©quipe de dÃ©veloppement.
// Afin de limiter les conflits avec GitHub, il est dÃ©cidÃ© d'attribuer un fichier de test Ã  chaque dÃ©veloppeur.
// DÃ©veloppeur 1 : fichier DAO.test1.php
// DÃ©veloppeur 2 : fichier DAO.test2.php
// DÃ©veloppeur 3 : fichier DAO.test3.php
// DÃ©veloppeur 4 : fichier DAO.test4.php

// Quelques conseils pour le travail collaboratif :
// avant d'attaquer un cycle de dÃ©veloppement (dÃ©but de sÃ©ance, nouvelle mÃ©thode, ...), faites un Pull pour rÃ©cupÃ©rer
// la derniÃ¨re version du fichier.
// AprÃ¨s avoir testÃ© et validÃ© une mÃ©thode, faites un commit et un push pour transmettre cette version aux autres dÃ©veloppeurs.
?>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Test de la classe DAO</title>
	<style type="text/css">body {font-family: Arial, Helvetica, sans-serif; font-size: small;}</style>
</head>
<body>

<?php
// connexion du serveur web Ã  la base MySQL
include_once ('DAO.class.php');
$dao = new DAO();


// test de la mÃ©thode existeAdrMailUtilisateur ----------------------------------------------------------
// modifiÃ© par Mathieu BURGOT le 23/11/2022 
echo "<h3>Test de existeAdrMailUtilisateur n°1 : </h3>";
// A CONTINUER .........

echo "<h3>Test de existeAdrMailUtilisateur : </h3>";
if ($dao->existeAdrMailUtilisateur("admin@gmail.com")) $existe = "oui"; else $existe = "non";
echo "<p>Existence de l'utilisateur 'admin@gmail.com' : <b>" . $existe . "</b><br>";
if ($dao->existeAdrMailUtilisateur("delasalle.sio.eleves@gmail.com")) $existe = "oui"; else $existe = "non";
echo "Existence de l'utilisateur 'delasalle.sio.eleves@gmail.com' : <b>" . $existe . "</b></br>";
/*
// test de la méthode autoriseAConsulter ----------------------------------------------------------
// modifié par dP le 13/8/2021
echo "<h3>Test de autoriseAConsulter : </h3>";
if ($dao->autoriseAConsulter(2, 3)) $autorise = "oui"; else $autorise = "non";
echo "<p>L'utilisateur 2 autorise l'utilisateur 3 : <b>" . $autorise . "</b><br>";
if ($dao->autoriseAConsulter(3, 2)) $autorise = "oui"; else $autorise = "non";
echo "<p>L'utilisateur 3 autorise l'utilisateur 2 : <b>" . $autorise . "</b><br>";
*/
// test de la méthode supprimerUneTrace -----------------------------------------------------------
// modifié par dP le 15/8/2021
echo "<h3>Test de supprimerUneTrace : </h3>";
$ok = $dao->supprimerUneTrace(22);
if ($ok) {
    echo "<p>Trace bien supprimée !</p>";
}
else {
    echo "<p>Echec lors de la suppression de la trace !</p>";
}

// test des méthodes creerUnPointDeTrace et terminerUneTrace --------------------------------------
// modifié par dP le 15/8/2021
echo "<h3>Test de terminerUneTrace : </h3>";
// on choisit une trace non terminée
$unIdTrace = 3;
// on l'affiche
$laTrace = $dao->getUneTrace($unIdTrace);
echo "<h4>l'objet laTrace avant l'appel de la méthode terminerUneTrace : </h4>";
echo ($laTrace->toString());
echo ('<br>');
// on la termine
$dao->terminerUneTrace($unIdTrace);
// et on l'affiche à nouveau
$laTrace = $dao->getUneTrace($unIdTrace);
echo "<h4>l'objet laTrace après l'appel de la méthode terminerUneTrace : </h4>";
echo ($laTrace->toString());
echo ('<br>');



// ferme la connexion Ã  MySQL :
unset($dao);
?>

</body>
</html>